.container {
  display: flex;
}
.box2 {
  width: 200px;
  height: 100px;
  padding: 20px;
  background-color: lightblue;
}
.content-box {
  box-sizing: content-box;
}
.border-box {
  box-sizing: border-box;
}
/* 
장단점 비교
content-box
장점  - 콘텐츠의 유연성 : 지정된 크기에 따라 동적으로 조정되므로, 디자인의 유연성이 높다.
      - 디자인 제어 : 패딩. 테두리를 분리하여 디자인 요소를 더 정교하게 제어 기능
단점  - 레이아웃의 복잡성 : 다 각각 계산해야 하므로 시간과 노력이 소요
      - 계산 오류 가능성
border-box
장점  - 예측 가능성 : 총 너비와 높이가 예측하기 쉽다.
      - 유지보수, 간편한 계산이 가능하다.
단점 : 내부 내용의 공간 감소 : 실제 콘텐츠 영역이 작아짐.
*/

/* visiblilty */
.square {
  width: 100px;
  height: 100px;
  border: 1px solid;
  display: inline-block;
}
.d-none {
  display: none;
  background-color: red;
}
.invisible {
  visibility: hidden;
  background-color: orange;
}
.opacity-0 {
  opacity: 0;
  background-color: tomato;
}
.opacity-0:hover {
  opacity: 0.5;
}
