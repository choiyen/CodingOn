<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>axios get으로 회원가입</title>
    <!-- axios를 쓰기 위한 CDN 코드 -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>

  <body>
    <form name="register">
      <label for="username">이름</label>
      <input type="text" name="username" id="username" />
      <br />

      <fieldset>
        <legend>성별</legend>
        <input type="radio" name="gender" id="male" value="남자" />
        <label for="male">남자</label>
        <input type="radio" name="gender" id="female" value="여자" />
        <label for="female">여자</label>
      </fieldset>

      <fieldset>
        <legend>생년월일</legend>
        <select name="birthYear" id="year">
          <% for(let i = 0; i < 30; i++) {%>
          <option value="<%= 2010 - i %>"><%= 2010 - i %></option>
          <% } %>
        </select>
        년
        <select name="birthMonth" id="day">
          <% for(let i = 1; i <=12; i++) {%>
          <option value="<%= i %>"><%= i %></option>
          <% } %>
        </select>
        <select name="birthDay" id="day">
          <% for(let i = 1; i <=31; i++) {%>
          <option value="<%= i %>"><%= i %></option>
          <% } %>
        </select>
      </fieldset>
      <fieldset>
        <legend>관심사</legend>
        <input type="checkbox" name="hobby" value="여행" /> 여행
        <input type="checkbox" name="hobby" value="패션" /> 패션
        <input type="checkbox" name="hobby" value="음식" /> 음식
      </fieldset>
      <br />
      <button type="button" onclick="axiosGET()">회원가입</button>
    </form>
    <div class="resultBox"></div>
    <script>
      function axiosGET() {
        console.log("axiosGet 함수 호출");
        const form = document.forms["register"];
        const resultBox = document.querySelector(".resultBox");

        //case 1. filter, map 반복문 사용
        //Array.from(arrayLike) : 유사 배열 객체
        const hobbies = Array.from(form.hobby)
          .filter((element) => element.checked == true)
          .map((element) => element.value);
        console.log(hobbies);
        //case 2. forEach 반복문 사용
        const hobbies2 = [];
        form.hobby.forEach((element) => {
          if (element.checked == true) {
            hobbies2.push(element.value);
          }
        });
        console.log(hobbies2);

        const date = {
          name: form.username.value,
          gender: form.gender.value,
          birthYear: form.birthYear.value,
          birthMonth: form.birthMonth.value,
          birthDay: form.birthDay.value,
          hobby: hobbies,
        };

        //console.log(date);
        // axios 요청의 결과는 Promise 객체
        // -> then - catch 메서드로 체이닝 가능
        // -> async/await도 사용 가능

        axios({
          method: "get",
          url: "/axios-get",
          //params 키를 사용하지 않고 쿼리 스트링을 직접 정의해서 요청을 보낼 수도 있음.
          params: date,
        }).then((response) => {
          //console.log("axios 성공");
          console.log(response.data); // 서버의 응답 결과(response.data에 응답 데이터가 담김)
          let { name, gender, birthYear, birthMonth, birthDay, hobby } =
            response.data;
          resultBox.textContent = `GET /axios 요청 완료 : ${name} 님의 성별은 ${gender} 이고, 생년월일은 ${birthYear}-${birthMonth}-${birthDay} 그리고 관심사는 ${hobby} 이네요~`;
        });
      }
    </script>
  </body>
</html>
